import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;


public class  AdminJDailogGUI extends JDialog implements ActionListener{
   
    JPanel pw=new JPanel(new GridLayout(4,1));
    JPanel pc=new JPanel(new GridLayout(4,1));
    JPanel ps=new JPanel();
 
    JLabel lable_Id = new JLabel("ID");
    JLabel lable_Name=new JLabel("이름");
    JLabel lable_Account=new JLabel("계좌번호");
    JLabel lable_type=new JLabel("회원유형");
 
 
    JTextField id=new JTextField();
    JTextField name=new JTextField();
    JTextField account=new JTextField();
    JTextField adtype=new JTextField();
   
 
    JButton confirm;
    JButton reset=new JButton("취소");
 
   Admin me;
 
   JPanel idCkP =new JPanel(new BorderLayout());
   JButton idCkBtn = new JButton("IDCheck");
   
   AdminDAO dao =new AdminDAO();
   
 
    public AdminJDailogGUI(Admin me, String index){
        super(me,"회원 수정");
        this.me=me;
//        if(index.equals("가입")){
//            confirm=new JButton(index);
//        }
//        if{
            confirm=new JButton("수정"); 
           
            //text박스에 선택된 레코드의 정보 넣기
            int row = me.jt.getSelectedRow();//선택된 행
            name.setText( me.jt.getValueAt(row, 0).toString() );
            id.setText( me.jt.getValueAt(row, 1).toString() );
            account.setText( me.jt.getValueAt(row, 2).toString() );
            adtype.setText( me.jt.getValueAt(row, 4).toString() );
           
            //id text박스 비활성
            id.setEditable(false);
   
            //IDCheck버튼 비활성화
            idCkBtn.setEnabled(false);
//        }
       
       
        //Label추가부분
        pw.add(lable_Name);//이름
        pw.add(lable_Id);//ID
        pw.add(lable_Account);//계좌
        pw.add(lable_type);//회원유형
   
       
        idCkP.add(id,"Center");
        idCkP.add(idCkBtn,"East");
       
        //TextField 추가
        pc.add(name);
        pc.add(idCkP);
        pc.add(account);
        pc.add(adtype);
       
       
       
        ps.add(confirm);
        ps.add(reset);
   
        add(pw,"West");
        add(pc,"Center");
        add(ps,"South");
       
        setSize(300,250);
        setVisible(true);
        
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
       
        //이벤트등록
        confirm.addActionListener(this); //가입/수정 이벤트등록
        reset.addActionListener(this); //취소 이벤트등록
        idCkBtn.addActionListener(this);// ID중복체크 이벤트 등록
       
    }//생성자끝
   
    /**
     * 가입/수정/삭제 기능에 대한 부분
     * */
    @Override
    public void actionPerformed(ActionEvent e) {
       String btnLabel =e.getActionCommand();//이벤트주체 대한 Label 가져오기
       
    	   if(btnLabel.equals("수정")){
    		   int row = me.jt.getSelectedRow();//선택된 행
    		   Object obj = me.jt.getValueAt(row, 3);
           if(Integer.valueOf((String) obj) > 0) {
        	   
        	   if( dao.userUpdate(this) > 0){
        		   messageBox(this, "수정완료되었습니다.");
        		   dao.userMemberUpdate(this);
        		   dispose();
        		   dao.userSelectAll(me.dt);
        		   if(me.dt.getRowCount() > 0 ) me.jt.setRowSelectionInterval(0, 0);
        		   
        	   }
           }
            else{
                messageBox(this, "수정되지 않았습니다.");
            }
           
           
           
       }else if(btnLabel.equals("취소")){
           dispose();
           
       }else if(btnLabel.equals("IDCheck")){
           //id텍스트박스에 값 없으면 메세지 출력 있으면 DB연동한다.
           if(id.getText().trim().equals("")){
               messageBox(this,"ID를 입력해주세요.");
               id.requestFocus();//포커스이동
           }else{
               
              if(  dao.getIdByCheck(id.getText()) ){ //중복아니다.(사용가능)
                  messageBox(this, id.getText()+"는 사용가능합니다.");  
              }else{ //중복이다.
                  messageBox(this,id.getText()+"는 중복입니다.");
                 
                  id.setText("");//text박스지우기
                  id.requestFocus();//커서놓기
              }
               
           }
           
       }
       
       
    }//actionPerformed끝
   
    /**
     * 메시지박스 띄워주는 메소드 작성
     * */
    public static void messageBox(Object obj , String message){
        JOptionPane.showMessageDialog( (Component)obj , message);
    }
 
}//클래스끝